{% extends 'base.html.twig' %}

{% block title %}Feed - Mentionable{% endblock %}

{% block body %}
<div class="main-panel">
    <div class="content-wrapper p-0">
        <div class="row mt-4">
            <div class="col-lg-12 text-end text-muted">
                <p>beta version 8.25</p>
            </div>
        </div>
        {# CENTERED CONTAINER #}
        <div class="row justify-content-center mb-2">
            <nav class="col-lg-7 m-0 p-0" aria-label="breadcrumb" style="border-radius: 5px;">
                <ol class="breadcrumb m-0 p-0">
                    <li class="breadcrumb-item active d-flex justify-content-start" style="width: 100%" aria-current="page">
                        <p class="text-white" style="font-size: 30px; user-select: none"><b>Feed</b></p>
                    </li>
                </ol>
            </nav>
        </div>
        <div class="row justify-content-center">
            <div class="col-lg-7 m-0 p-0 mb-3" id="errorWhilePosting" style="display: none;">
                <span id="errorMessage" class="badge bg-danger"></span>
            </div>
            <a class="col-lg-7 note-launch-link d-flex flex-row p-3 mb-2 text-white" style="text-decoration: none; background-color: #bc7b00; border-radius: 10px;" href="#" data-bs-toggle="modal" data-bs-target="#newNoteModal">
                <h4 class="m-0 p-0">
                    What's on your mind ...
                </h4>
                <i class='bx bx-wink-smile ms-auto me-2' style='color:#ffffff; font-size: 24px'></i>
            </a>
            <!-- Modal create note -->
            <div class="modal fade" id="newNoteModal" tabindex="-1" aria-labelledby="newNoteModalLabel" aria-hidden="true" style="overflow-y: hidden;">
                <div class="modal-dialog" style="max-width: 850px;">
                    <div class="modal-content" style="background-color: #181b20; border-radius: 5px;">
                        <div class="modal-body">
                            <form id="new-note-form" class="forms-sample" method="POST" enctype="multipart/form-data">
                                <h3 class="text-white mb-4">Write a note</h3>
                                <div class="form-group mb-3">
                                    <textarea name="content" id="post-content" class="form-control" style="height: 85px;" required></textarea>
                                </div>

                                {% if app.user.nametag != 'mentionable' %}
                                    <div class="form-group d-flex flex-row mb-3">
                                        <a class="btn" style="height: 2.575rem; background-color: #2A3038; border-top-right-radius: 0; border-bottom-right-radius: 0;" tabindex="-1" role="button" aria-disabled="true">
                                            <p style="font-size: 20px; color: #eaeaea;">@</p>
                                        </a>
                                        <input type="text" placeholder="Address to someone" name="nametag" id="nametag" class="form-control" style="border-top-left-radius: 0; border-bottom-left-radius: 0;" required>
                                    </div>
                                {% endif %}

                                <div class="form-group mb-3">
                                    <label for="noteImage" class="form-label text-light">Add image</label>
                                    <input type="file" class="form-control" style="height: auto" id="noteImage" name="image" accept="image/*">
                                </div>

                                <div class="d-flex justify-content-end">
                                    <button type="button" class="btn btn-light me-2" data-bs-dismiss="modal" aria-label="Close">Close</button>
                                    <button type="submit" class="btn btn-warning" style="width: 120px;">Post</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {# NOTES LIST #}
        <div class="row justify-content-center">
            <div id="loading-spinner" style="display:none; text-align:center;">
                <div class="spinner-border text-light" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            {# NOTE #}
            {% if notes is defined %}
                <div id="notes-container" class="d-flex flex-column align-items-center">
                    {% include 'default/_note.html.twig' with {
                        notes: notes,
                        votesMap: votesMap,
                        commentVotesMap: commentVotesMap,
                        favoritesMap: favoritesMap,
                        rolesMap: rolesMap,
                        limitedComments: limitedComments,
                        currentUserNametag: currentUserNametag
                    } %}
                </div>
                <div id="loader-loading-spinner" class="mt-3" style="display:none; text-align:center;">
                    <div class="spinner-border text-light" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
                <div id="load-more-zone" class="mt-5 glow-text" data-page="{{ page + 1 }}">
                    Load more
                </div>
            {% else %}
                    <div class="col-lg-7 pt-4 ps-4 pe-4" style="background-color: #181b20; border-radius: 5px; margin-top: 2rem;">
                        <p class="text-light">Oops. No notes available here.</p>
                    </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}

{% block javascript %}
{{ parent() }}
<script>
    window.votesMap = {{ votesMap|json_encode|raw }};
</script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const notesContainer = document.getElementById('notes-container');

    notesContainer.addEventListener('click', function(e) {
        const button = e.target.closest('.toggle-comments');
        if (button) {
            const noteId = button.getAttribute('data-note-id');
            const commentSection = document.getElementById("comments-" + noteId);

            if (commentSection) {
                commentSection.style.display = (commentSection.style.display === "none" || commentSection.style.display === "") ? "block" : "none";
            } else {
                console.error("The comment with the following id was not found: comments-" + noteId);
            }
        }
    });
});
</script>
<script>
document.addEventListener("DOMContentLoaded", function () {
    $('#new-note-form').on('submit', function (e) {
        e.preventDefault();
        let form = $('#new-note-form')[0];
        let formData = new FormData(form);

        $('#loading-spinner').show();
        const startTime = Date.now();

        $.ajax({
            url: "{{ path('app_note_new') }}",
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                const modalEl = document.getElementById('newNoteModal');
                modalEl.classList.remove('show');
                modalEl.style.display = 'none';
                document.body.classList.remove('modal-open');
                $('.modal-backdrop').remove();

                form.reset();

              setTimeout(function () {
                    $('#loading-spinner').hide();
                    location.reload();
                }, 1500);

            },
            error: function (xhr) {
                const modalEl = document.getElementById('newNoteModal');
                modalEl.classList.remove('show');
                modalEl.style.display = 'none';
                document.body.classList.remove('modal-open');
                $('.modal-backdrop').remove();

                $('#loading-spinner').hide();

                let errors = 'Unexpected error occurred.';

                if (xhr.responseJSON) {

                    if (xhr.responseJSON.message) {
                        errors = xhr.responseJSON.message;
                    }

                    else if (xhr.responseJSON.errors) {
                        errors = xhr.responseJSON.errors.join('<br>');
                    }
                }

                $('#errorMessage').html(errors);
                $('#errorWhilePosting').show();
            }
        });
    });
});
</script>
<script src="{{ asset('../assets/js/feed.js') }}"></script>
<script src="{{ asset('../assets/js/comments.js') }}"></script>
<script src="{{ asset('../assets/js/favorite.js') }}"></script>
<script src="{{ asset('../assets/js/emoji.js') }}"></script>
<script>
    window.commentVotesMap = {{ commentVotesMap|json_encode|raw }};
    window.currentUserNametag = "{{ app.user ? app.user.nametag : '' }}";
    window.csrfToken = "{{ csrf_token('comment_vote') }}";
</script>
<script>
document.getElementById('notes-container').addEventListener('click', function(e) {
    const link = e.target.closest('.see-all-comments');
    if (!link) return;

    e.preventDefault();
    const noteId = link.dataset.noteId;
    const commentsContainer = document.getElementById('comments-list-' + noteId);
    const url = '/note/' + noteId + '/comments';

    fetch(url)
        .then(res => res.json())
        .then(data => {
            const commentsArray = Array.isArray(data) ? data : (data.comments || []);
            const existingIds = Array.from(commentsContainer.querySelectorAll('[data-comment-id]'))
                .map(el => el.dataset.commentId);

            commentsArray.forEach(comment => {
                if (!comment || !comment.user || !comment.id) return;
                if (!existingIds.includes(String(comment.id))) {
                    const isUpvoted = window.commentVotesMap && window.commentVotesMap[comment.id] === 'upvote';
                    const html = `
                        <div class="d-flex flex-row mb-3" data-note-id="${noteId}" data-comment-id="${comment.id}">
                            <a class="nav-link me-2" href="/profile/${comment.user.id}/view">
                                <img class="img-xs rounded-circle" src="/uploads/avatars/${comment.user.avatar}" alt="avatarComment" onerror="showDefaultIcon(this)">
                            </a>
                            <div class="ms-2 p-0">
                                <div class="d-flex flex-row" style="height: 30px;">
                                    <a class="m-0 p-0 text-decoration-none text-white" href="/profile/${comment.user.id}/view">
                                        <p class="text-white me-2" style="font-size: 18px;">@${comment.user.nametag}</p>
                                    </a>
                                    ${comment.isEdited ? `<i class="fa fa-clock-o text-gray me-1" style="margin-top: 6px"></i>` : `<p class="text-gray mt-1 me-2">•</p>`}
                                    <p class="text-gray mt-1">${comment.humanTime}</p>
                                </div>
                                <div class="d-inline-flex">
                                    <small style="font-size: 16px; color: #404040; background-color: #ffffff; border-radius: 8px; opacity: 0.9; padding: 5px;">${comment.message}</small>
                                    <button class="btn btn-sm ms-2 d-flex align-items-center border-0 comment-upvote-btn ${isUpvoted ? 'btn-light' : 'btn-outline-light'}"
                                            type="button"
                                            data-note-id="${noteId}"
                                            data-comment-id="${comment.id}"
                                            data-csrf="${window.csrfToken}">
                                        <i class='bx bx-arrow-up' style="font-size: 20px;"></i>
                                        <span id="comment-upvotes-${comment.id}" class="ms-1">${comment.upVote || 0}</span>
                                    </button>
                                </div>
                            </div>
                            <div class="dropdown ms-auto me-1 d-inline-flex justify-content-end">
                                <a href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false" style="height: 30px;">
                                    <i class='bx bx-dots-horizontal-rounded' style='color:#ffffff'></i>
                                </a>
                                <ul class="dropdown-menu m-0">
                                    ${
                                        comment.user.nametag === window.currentUserNametag
                                        ? `<li><a class="dropdown-item" href="/post/comment/${noteId}-${comment.id}/update">Edit...</a></li>
                                           <li><a class="dropdown-item delete-comment-btn" href="/post/comment/${noteId}-${comment.id}/delete">Delete comment</a></li>`
                                        : `<li><a class="dropdown-item" href="/note/comment/${noteId}-${comment.id}/report">Report</a></li>`
                                    }
                                </ul>
                            </div>
                        </div>
                    `;
                    commentsContainer.insertAdjacentHTML('beforeend', html);
                }
            });

            link.style.display = 'none';
        })
        .catch(err => console.error('Error loading comments:', err));
});
</script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const loadMoreBtn = document.getElementById('load-more-zone');
    const notesContainer = document.getElementById('notes-container');
    const loader = document.getElementById('loader-loading-spinner');

    function updateLoadMoreVisibility() {
        const postCount = notesContainer.querySelectorAll('.note-item').length;
        loadMoreBtn.style.display = (postCount >= 10) ? 'block' : 'none';
    }

    updateLoadMoreVisibility();

    loadMoreBtn.addEventListener('click', function () {
        const page = this.dataset.page;

        loader.style.display = 'block';
        loadMoreBtn.disabled = true;

        fetch(`/?page=${page}`, {
            headers: { 'X-Requested-With': 'XMLHttpRequest' }
        })
        .then(response => {
            if (!response.ok) throw new Error(`Server error: ${response.status}`);
            return response.text();
        })
        .then(html => {
            if (!html.trim()) {
                loadMoreBtn.style.display = 'none';
                return;
            }

            notesContainer.insertAdjacentHTML('beforeend', html);

            loadMoreBtn.dataset.page = parseInt(page) + 1;

            updateLoadMoreVisibility();
        })
        .catch(error => {
            console.error('Error when loading notes:', error);
        })
        .finally(() => {
            loader.style.display = 'none';
            loadMoreBtn.disabled = false;
        });
    });
});
</script>
{% endblock %}

